;; Analyzed by ClojureScript 0.0-3299
{:name om.next.protocols, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {pull {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next/protocols.cljs", :line 4, :column 4, :end-line 4, :end-column 8, :protocol om.next.protocols/IPull, :doc nil, :arglists (quote ([pullable selector context]))}, :protocol om.next.protocols/IPull, :name om.next.protocols/pull, :variadic false, :file "resources/out/om/next/protocols.cljs", :end-column 8, :method-params ([pullable selector context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pullable selector context])), :doc nil}, push-async {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next/protocols.cljs", :line 13, :column 4, :end-line 13, :end-column 14, :protocol om.next.protocols/IPushAsync, :doc nil, :arglists (quote ([pushable entity context cb]))}, :protocol om.next.protocols/IPushAsync, :name om.next.protocols/push-async, :variadic false, :file "resources/out/om/next/protocols.cljs", :end-column 14, :method-params ([pushable entity context cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 13, :max-fixed-arity 4, :fn-var true, :arglists (quote ([pushable entity context cb])), :doc nil}, IPush {:meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next/protocols.cljs", :line 6, :column 14, :end-line 6, :end-column 19, :doc nil, :protocol-symbol true, :protocol-info {:methods {push [[pushable entity context]]}}}, :protocol-symbol true, :name om.next.protocols/IPush, :file "resources/out/om/next/protocols.cljs", :end-column 19, :column 1, :line 6, :protocol-info {:methods {push [[pushable entity context]]}}, :info nil, :end-line 6, :impls #{}, :doc nil}, IPullAsync {:meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next/protocols.cljs", :line 9, :column 14, :end-line 9, :end-column 24, :doc nil, :protocol-symbol true, :protocol-info {:methods {pull-async [[pullable selector context cb]]}}}, :protocol-symbol true, :name om.next.protocols/IPullAsync, :file "resources/out/om/next/protocols.cljs", :end-column 24, :column 1, :line 9, :protocol-info {:methods {pull-async [[pullable selector context cb]]}}, :info nil, :end-line 9, :impls #{}, :doc nil}, push {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next/protocols.cljs", :line 7, :column 4, :end-line 7, :end-column 8, :protocol om.next.protocols/IPush, :doc nil, :arglists (quote ([pushable entity context]))}, :protocol om.next.protocols/IPush, :name om.next.protocols/push, :variadic false, :file "resources/out/om/next/protocols.cljs", :end-column 8, :method-params ([pushable entity context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 7, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pushable entity context])), :doc nil}, IPull {:meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next/protocols.cljs", :line 3, :column 14, :end-line 3, :end-column 19, :doc nil, :protocol-symbol true, :protocol-info {:methods {pull [[pullable selector context]]}}}, :protocol-symbol true, :name om.next.protocols/IPull, :file "resources/out/om/next/protocols.cljs", :end-column 19, :column 1, :line 3, :protocol-info {:methods {pull [[pullable selector context]]}}, :info nil, :end-line 3, :impls #{}, :doc nil}, IStore {:meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next/protocols.cljs", :line 15, :column 14, :end-line 15, :end-column 20, :doc nil, :protocol-symbol true, :protocol-info {:methods {commit [[store component entity]]}}}, :protocol-symbol true, :name om.next.protocols/IStore, :file "resources/out/om/next/protocols.cljs", :end-column 20, :column 1, :line 15, :protocol-info {:methods {commit [[store component entity]]}}, :info nil, :end-line 15, :impls #{}, :doc nil}, commit {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next/protocols.cljs", :line 16, :column 4, :end-line 16, :end-column 10, :protocol om.next.protocols/IStore, :doc nil, :arglists (quote ([store component entity]))}, :protocol om.next.protocols/IStore, :name om.next.protocols/commit, :variadic false, :file "resources/out/om/next/protocols.cljs", :end-column 10, :method-params ([store component entity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 16, :max-fixed-arity 3, :fn-var true, :arglists (quote ([store component entity])), :doc nil}, pull-async {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next/protocols.cljs", :line 10, :column 4, :end-line 10, :end-column 14, :protocol om.next.protocols/IPullAsync, :doc nil, :arglists (quote ([pullable selector context cb]))}, :protocol om.next.protocols/IPullAsync, :name om.next.protocols/pull-async, :variadic false, :file "resources/out/om/next/protocols.cljs", :end-column 14, :method-params ([pullable selector context cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 10, :max-fixed-arity 4, :fn-var true, :arglists (quote ([pullable selector context cb])), :doc nil}, IPushAsync {:meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next/protocols.cljs", :line 12, :column 14, :end-line 12, :end-column 24, :doc nil, :protocol-symbol true, :protocol-info {:methods {push-async [[pushable entity context cb]]}}}, :protocol-symbol true, :name om.next.protocols/IPushAsync, :file "resources/out/om/next/protocols.cljs", :end-column 24, :column 1, :line 12, :protocol-info {:methods {push-async [[pushable entity context cb]]}}, :info nil, :end-line 12, :impls #{}, :doc nil}}}