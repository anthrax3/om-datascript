;; Analyzed by ClojureScript 0.0-3299
{:use-macros {defui om.next}, :excludes #{var? key}, :name om.next, :imports nil, :requires {gstring goog.string, goog.string goog.string, walk clojure.walk, clojure.walk clojure.walk, p om.next.protocols, om.next.protocols om.next.protocols, om.next.stores om.next.stores}, :uses {TreeStore om.next.stores}, :defs {query {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 29, :column 4, :end-line 29, :end-column 9, :protocol om.next/IQuery, :doc nil, :arglists (quote ([this]))}, :protocol om.next/IQuery, :name om.next/query, :variadic false, :file "resources/out/om/next.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, flush-queue {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 92, :column 7, :end-line 92, :end-column 18, :arglists (quote ([]))}, :name om.next/flush-queue, :variadic false, :file "resources/out/om/next.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, props {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 55, :column 7, :end-line 55, :end-column 12, :arglists (quote ([c]))}, :name om.next/props, :variadic false, :file "resources/out/om/next.cljs", :end-column 12, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, render-queued {:name om.next/render-queued, :file "resources/out/om/next.cljs", :line 14, :column 1, :end-line 14, :end-column 29, :private true, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 14, :column 16, :end-line 14, :end-column 29, :private true}}, var->keyword {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 35, :column 7, :end-line 35, :end-column 19, :arglists (quote ([x]))}, :name om.next/var->keyword, :variadic false, :file "resources/out/om/next.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, build-index {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 67, :column 7, :end-line 67, :end-column 18, :arglists (quote ([cl]))}, :name om.next/build-index, :variadic false, :file "resources/out/om/next.cljs", :end-column 18, :method-params ([cl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cl]))}, var? {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 31, :column 7, :end-line 31, :end-column 11, :arglists (quote ([x]))}, :name om.next/var?, :variadic false, :file "resources/out/om/next.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, render-queue {:name om.next/render-queue, :file "resources/out/om/next.cljs", :line 16, :column 1, :end-line 16, :end-column 28, :private true, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 16, :column 16, :end-line 16, :end-column 28, :private true}}, key {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 64, :column 7, :end-line 64, :end-column 10, :arglists (quote ([c]))}, :name om.next/key, :variadic false, :file "resources/out/om/next.cljs", :end-column 10, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, commit! {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 86, :column 7, :end-line 86, :end-column 14, :arglists (quote ([c entity]))}, :name om.next/commit!, :variadic false, :file "resources/out/om/next.cljs", :end-column 14, :method-params ([c entity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c entity]))}, bound-query {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 45, :column 7, :end-line 45, :end-column 18, :arglists (quote ([cl]))}, :name om.next/bound-query, :variadic false, :file "resources/out/om/next.cljs", :end-column 18, :method-params ([cl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cl]))}, IQuery {:meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 28, :column 14, :end-line 28, :end-column 20, :doc nil, :protocol-symbol true, :protocol-info {:methods {query [[this]]}}}, :protocol-symbol true, :name om.next/IQuery, :file "resources/out/om/next.cljs", :end-column 20, :column 1, :line 28, :protocol-info {:methods {query [[this]]}}, :info nil, :end-line 28, :impls #{}, :doc nil}, params {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 22, :column 4, :end-line 22, :end-column 10, :protocol om.next/IQueryParams, :doc nil, :arglists (quote ([this]))}, :protocol om.next/IQueryParams, :name om.next/params, :variadic false, :file "resources/out/om/next.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, tree-store {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 123, :column 7, :end-line 123, :end-column 17, :arglists (quote ([root-class data]))}, :name om.next/tree-store, :variadic false, :file "resources/out/om/next.cljs", :end-column 17, :method-params ([root-class data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 2, :fn-var true, :arglists (quote ([root-class data]))}, bind-query {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 38, :column 7, :end-line 38, :end-column 17, :arglists (quote ([query params]))}, :name om.next/bind-query, :variadic false, :file "resources/out/om/next.cljs", :end-column 17, :method-params ([query params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query params]))}, IQueryParams {:meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 21, :column 14, :end-line 21, :end-column 26, :doc nil, :protocol-symbol true, :protocol-info {:methods {params [[this]]}}}, :protocol-symbol true, :name om.next/IQueryParams, :file "resources/out/om/next.cljs", :end-column 26, :column 1, :line 21, :protocol-info {:methods {params [[this]]}}, :info nil, :end-line 21, :impls #{default}, :doc nil}, state {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 58, :column 7, :end-line 58, :end-column 12, :arglists (quote ([c]))}, :name om.next/state, :variadic false, :file "resources/out/om/next.cljs", :end-column 12, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, create-factory {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 48, :column 7, :end-line 48, :end-column 21, :arglists (quote ([cl]))}, :name om.next/create-factory, :variadic false, :file "resources/out/om/next.cljs", :end-column 21, :method-params ([cl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cl]))}, app-state {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 61, :column 7, :end-line 61, :end-column 16, :arglists (quote ([c]))}, :name om.next/app-state, :variadic false, :file "resources/out/om/next.cljs", :end-column 16, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, root {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 97, :column 7, :end-line 97, :end-column 11, :arglists (quote ([class state {:keys [target raf]}]))}, :name om.next/root, :variadic false, :file "resources/out/om/next.cljs", :end-column 11, :method-params ([class state p__10999]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 3, :fn-var true, :arglists (quote ([class state {:keys [target raf]}]))}, needs-display! {:protocol-inline nil, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 83, :column 7, :end-line 83, :end-column 21, :arglists (quote ([xs]))}, :name om.next/needs-display!, :variadic false, :file "resources/out/om/next.cljs", :end-column 21, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, *app-state* {:name om.next/*app-state*, :file "resources/out/om/next.cljs", :line 12, :column 1, :end-line 12, :end-column 48, :dynamic true, :private true, :meta {:file "/Users/davidnolen/development/clojure/om-datascript/resources/out/om/next.cljs", :line 12, :column 37, :end-line 12, :end-column 48, :dynamic true, :private true}}}, :require-macros {om.next om.next}, :cljs.analyzer/constants {:seen #{:else :component :om/root :component->path :raf :target :prop->component}, :order [:component :prop->component :component->path :target :raf :else :om/root]}, :doc nil}